language: java
jdk:
- oraclejdk8
sudo: required
addons:
  apt:
    packages:
      - docker-ce
before_install:
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin
- sudo apt-get update
- sudo apt-get -y install docker-ce
- echo "Testing Docker Hub credentials"
- docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD
- echo "Docker Hub credentials are working"
before_script:
- docker -v
- docker-compose -v
- docker-compose -f docker-compose-backing.yml up -d
- sleep 10s
- docker-compose up --build -d
- sleep 20s
- docker ps
after_success:
- export ACTUAL_BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH;
  else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
- echo "Test Success - Branch($TRAVIS_BRANCH) Actual($ACTUAL_BRANCH) Pull Request($TRAVIS_PULL_REQUEST)
  Tag($TRAVIS_TAG) Commit($TRAVIS_COMMIT) PR($TRAVIS_PULL_REQUEST) Build($TRAVIS_BUILD_NUMBER)"
- if [[ "$ACTUAL_BRANCH" == "master" ]]; then echo -e "Push Container to Docker Hub";
  fi
- docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD
- export TAG=`if [ "$ACTUAL_BRANCH" == "master" ]; then echo "latest";else echo ""; fi`
- export REPO=aista/banking-account-cmd
- cd account.cmd
- docker build -f Dockerfile -t $REPO:$TAG .
- docker push $REPO
- export REPO=aista/banking-account-query
- cd ../account.query
- docker build -f Dockerfile -t $REPO:$TAG .
- docker push $REPO
- export REPO=aista/banking-customers
- cd ../customers
- docker build -f Dockerfile -t $REPO:$TAG .
- docker push $REPO
- export REPO=aista/banking-transactions
- cd ../transactions
- docker build -f Dockerfile -t $REPO:$TAG .
- docker push $REPO
- export REPO=aista/banking-edge
- cd ../edgeservice
- docker build -f Dockerfile -t $REPO:$TAG .
- docker push $REPO
env:
  global:
  - secure: SFzUThgv0NX3eo+kmowsmQWy/CtpyDppDiXz+qRq6yOXSg48K1OFE3wNKiUMOHfbZS82JVWF4Di55cBNcxIgbyBRSNFoY2hxJ4mvfi7/5FPUsHbmnobaUGVz/vYefHYk9zkwEPugNIu6t9ni5D/ImzHqVbRRFxPqnI93wb/UBqBlGHr6gvyF6suBN2yN+v8am9nRWY6qmmoKj/xgKG339bLNJedcRC+snAGw0SlIrbNr8qnvTvjJV+1+B8HYgWOuCc7ENPnHlZvw2Vganfzv78k9mzy3LJzFFbYTB8EhpOrWsLIKQ3axOhiCIz+Mg5z3R4cy5DHxX/k3/Zo254qGgvqZvMSsyXKSO0Ujnv4DGzecfLrngzCz01geSgbaLxMEDAUb+uwvqVu4/e/CqI5Mny11M72ScC86+D06sL5kih3W2hVjNohFwM0d/JDDWVZNIlezCqh8RqTGlEvRuLCTn/RqrAwd8MFxK/p1Fe/LIpOjVquYPC8LUqLb79iSCdgGasxTEaJqShQPhWzGmcIaqQRUicQuU+ACUgCnWaP4NpVZk6DFF5RNKUwSALu0v34+BeUdNU5moFKSQVOj2sPYibHAH3krjofgS0YjXisv8+GXigZQsRcGpt0q93ySvuLXLvUeSBKLRYh+B0GuprZ6PRRlJmsQGOWGIqW7NvnEf0E=
  - secure: Cdi3xoLUx86k1D6KxH/ID7A9E3h2+MXTJH7hTdd4rLBjXPSe+tdzldRMuxTdVgkMpQONXwTK5wbPg8sl3y6utS3xOLpmQ7hLU3cPu6Y+Wtd6VQh0DaXvFyj7tHp93Asol9EsXGKDlHLgBmcFhg0xKNKe0eMIKaIehHvfopdegRKqRXGRUlLAeIIzYD2D5Tvrqeq/htfrtIkoJHRkl0/Rt3BGFKH0IIoOxmpQPGlXdq3/JVkBuVXysD4pXl3M8VhZtLT3BDwlYthnUrGRfeOFDpobJD4H8wDo62z2uFxWNX8cgjZEunjMwhGoqRVhUwrvOYYFFmnYl1wS7eF1RL47P+llIKDDFJfZXEOXKUnx5oXQNa/pDsGw5zmt+dIr0qIeaqJ1y4knQeqd9FH3e14WOU1TtjHE7HjUYYXanTq9bRHg/3IhHxuV4F+RIKBjErQSLkivR6vdexea/1r9gdm6wYYPp5AyadcDb+dAvWwz5D0veKwFoMwE6pqQEVZdfDIEDEQYyOPUwLZO5zrSEh2y4YSRGczGmdscE+WkCyqcjDhgR8blszuzYFqsd0OOhJAw/mxeMSibAXdMilOH+Suw9lwu9i+JNa8V8iSxbbSHuOLNOQwZKJikVTeRJ2bVZrjRa0Ub6qlao7BOUplhVnPtTU2HvV3zGYKuM0m7HC/aq/8=
